# Generated by Django 2.2 on 2019-04-10 00:07

import assets.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Asset',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('serial_number', models.CharField(max_length=17, unique=True, verbose_name='engine serial number')),
                ('odometer', models.DecimalField(decimal_places=2, default=0, max_digits=9)),
                ('in_miles', models.BooleanField(default=False)),
                ('in_kilometers', models.BooleanField(default=False)),
                ('in_hours', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['user'],
            },
        ),
        migrations.CreateModel(
            name='Automobile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='name of asset')),
                ('slug', models.SlugField(blank=True, help_text='leave blank, or unique name', null=True, unique=True)),
                ('engineering_equipment', models.CharField(choices=[('Cr', 'cars'), ('T', 'trucks'), ('Bu', 'buses'), ('At', "off road ATV's"), ('Mc', 'motorcycles'), ('Sn', 'snowmobiles'), ('Tc', 'tractors'), ('Bu', 'bulldozers'), ('Se', 'seed drills'), ('BL', 'backhoe loaders'), ('Co', 'continuous tracks'), ('HE', 'hydraulic excavators'), ('DT', 'dump trucks'), ('WD', 'wheel dozers'), ('DL', 'drag liners'), ('SK', 'skid-steer loaders'), ('MG', 'motor graders'), ('CL', 'crawler loaders'), ('Tr', 'Trenchers'), ('AT', 'articulated trucks'), ('AP', 'asphalt pavers'), ('CP', 'cold planers'), ('CT', 'compact tracks'), ('MT', 'multi-terrain loaders'), ('Co', 'compactors'), ('Ex', 'excavetors'), ('FB', 'feller bunchers'), ('F', 'forwarders'), ('H', 'harvesters'), ('KL', 'knuckleboom loaders'), ('Lo', 'loaders'), ('OT', 'off-highway trucks'), ('Sk', 'skidders'), ('Te', 'telehandlers'), ('WT', 'wheel tracktor-scrapers'), ('PW', 'power plants')], default='Cr', max_length=2)),
                ('year', models.CharField(choices=[('2019', '2019'), ('2018', '2018'), ('2017', '2017'), ('2016', '2016'), ('2015', '2015'), ('2014', '2014'), ('2013', '2013'), ('2012', '2012'), ('2011', '2011'), ('2010', '2010'), ('2009', '2009'), ('2008', '2008'), ('2007', '2007'), ('2006', '2006'), ('2005', '2005'), ('2004', '2004'), ('2003', '2003'), ('2002', '2002'), ('2001', '2001'), ('1999', '1999'), ('1998', '1998'), ('1997', '1997'), ('1996', '1996'), ('1995', '1995'), ('1994', '1994'), ('1993', '1993'), ('1992', '1992'), ('1991', '1991'), ('1990', '1990'), ('1989', '1989'), ('1988', '1988'), ('1987', '1987'), ('1986', '1986'), ('1985', '1985'), ('1984', '1984'), ('1983', '1983'), ('1982', '1982'), ('1981', '1981'), ('1980', '1980'), ('1979', '1979'), ('1978', '1978'), ('1977', '1977'), ('1976', '1976'), ('1975', '1975'), ('1974', '1974'), ('1973', '1973'), ('1972', '1972'), ('1971', '1971'), ('1970', '1970'), ('1969', '1969'), ('1968', '1968'), ('1967', '1967'), ('1966', '1966'), ('1965', '1965'), ('1964', '1964'), ('1963', '1963'), ('1962', '1962'), ('1961', '1961'), ('1960', '1960'), ('1959', '1959'), ('1958', '1958'), ('1957', '1957'), ('1956', '1956'), ('1955', '1955'), ('1954', '1954'), ('1953', '1953'), ('1952', '1952'), ('1951', '1951'), ('1950', '1950'), ('1949', '1949'), ('1948', '1948'), ('1947', '1947'), ('1946', '1946'), ('1946', '1945'), ('1944', '1944'), ('1943', '1943'), ('1942', '1942'), ('1941', '1941'), ('1940', '1940'), ('1939', '1939'), ('1938', '1938'), ('1937', '1937'), ('1936', '1936'), ('1935', '1935'), ('1934', '1934'), ('1933', '1933'), ('1932', '1932'), ('1931', '1931'), ('1930', '1930'), ('1929', '1929'), ('1928', '1928'), ('1927', '1927'), ('1926', '1926'), ('1925', '1925'), ('1924', '1924'), ('1923', '1923'), ('1922', '1922'), ('1921', '1921'), ('1920', '1920'), ('1919', '1919'), ('1918', '1918'), ('1917', '1917'), ('1916', '1916'), ('1915', '1915'), ('1914', '1914'), ('1913', '1913'), ('1912', '1912'), ('1911', '1911'), ('1910', '1910'), ('1909', '1909'), ('1908', '1908'), ('1907', '1907'), ('1906', '1906'), ('1905', '1905'), ('1904', '1904'), ('1903', '1903'), ('1902', '1902'), ('1901', '1901')], default='2019', max_length=4, verbose_name='year built')),
                ('gross_weight', models.PositiveIntegerField(blank=True, null=True)),
                ('image', models.ImageField(blank=True, height_field='height_field', null=True, upload_to=assets.models.upload_location, width_field='width_field')),
                ('height_field', models.IntegerField(default=0)),
                ('width_field', models.IntegerField(default=0)),
                ('content', models.TextField(verbose_name='description and condition')),
                ('used_for', models.CharField(max_length=120)),
                ('color', models.CharField(blank=True, max_length=120, null=True)),
                ('fuel', models.CharField(choices=[('G', 'gasoline'), ('D', 'diesel'), ('M', 'mix two cycle'), ('E', 'electric'), ('H', 'hybrid'), ('W', 'wind'), ('P', 'human powered')], max_length=1, verbose_name='type of fuel')),
                ('license_plate', models.CharField(blank=True, max_length=17, null=True, unique=True, verbose_name='tag/licence plate')),
                ('vin', models.CharField(default='JNRAR05YX049150', max_length=17, unique=True, verbose_name='vin or hull id')),
                ('fees_paid', models.DecimalField(decimal_places=2, default=51.0, max_digits=6)),
                ('wt_wheels', models.IntegerField(default=4141)),
                ('body_type', models.CharField(choices=[('UT', 'utility'), ('SP', 'sport'), ('4D', 'four door'), ('VY', 'v drive motor Yacht'), ('WA', 'walk around'), ('BR', 'bow rider'), ('FB', 'flat bottom'), ('CT', 'catamaran')], default='UT', max_length=4)),
                ('cylinders', models.IntegerField(default=6)),
                ('registered_owner', models.CharField(default='Owner', max_length=25)),
                ('owners_address', models.CharField(default='address', max_length=120)),
                ('is_it_insured', models.BooleanField(default=False)),
                ('insurance_type', models.CharField(default='auto', max_length=100)),
                ('insurance_cost', models.DecimalField(decimal_places=2, default=159.26, max_digits=5)),
                ('insurance_policy_number', models.CharField(max_length=12)),
                ('emergency_roadside_assistance', models.BooleanField(default=False)),
                ('assistance_miles', models.IntegerField(blank=True, default=20, null=True)),
                ('wheelbase', models.DecimalField(blank=True, decimal_places=2, default=106.3, max_digits=6, null=True)),
                ('overall_length', models.DecimalField(blank=True, decimal_places=2, default=183.9, max_digits=6, null=True)),
                ('overall_height', models.DecimalField(blank=True, decimal_places=2, default=70.7, max_digits=6, null=True)),
                ('min_ground_clearance', models.DecimalField(blank=True, decimal_places=2, default=8.3, max_digits=6, null=True)),
                ('base_curb_weight', models.DecimalField(blank=True, decimal_places=2, default=4352, max_digits=6, null=True)),
            ],
            options={
                'ordering': ['user', 'brand', 'model', 'year'],
            },
        ),
        migrations.CreateModel(
            name='CarManufacturer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(choices=[('se', 'select make'), ('ac', 'acura'), ('am', 'am general'), ('au', 'audi'), ('be', 'bentley'), ('bm', 'bmw'), ('bu', 'buick'), ('ca', 'cadillac'), ('ch', 'chevrolet'), ('cr', 'chrysler'), ('da', 'daewoo'), ('do', 'dodge'), ('fe', 'ferrari'), ('fo', 'ford'), ('fr', 'freightliner'), ('gm', 'gmc'), ('ho', 'honda'), ('hy', 'hyundai'), ('in', 'infiniti'), ('it', 'international'), ('is', 'isuzu'), ('ja', 'jaguar'), ('je', 'jeep'), ('ki', 'kia'), ('la', 'lamborghini'), ('lr', 'land rover'), ('le', 'lexus'), ('li', 'lincoln'), ('lo', 'lotus'), ('ma', 'mazda'), ('me', 'mercedes benz'), ('mr', 'mercury'), ('mi', 'mitsubishi'), ('ni', 'nissan'), ('ol', 'oldsmobile'), ('pl', 'plymouth'), ('po', 'pontiac'), ('pr', 'porsche'), ('ro', 'rolls royce'), ('sa', 'saab'), ('st', 'saturn'), ('st', 'sterling'), ('su', 'subaru'), ('sz', 'suzuki'), ('to', 'toyota'), ('vw', 'volkswagen'), ('vo', 'volvo')], default='se', max_length=2, verbose_name='make')),
            ],
            options={
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='CarModelType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=60, verbose_name='model')),
            ],
            options={
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='Equipment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='name of asset')),
                ('slug', models.SlugField(blank=True, help_text='leave blank, or unique name', null=True, unique=True)),
                ('year', models.CharField(choices=[('2019', '2019'), ('2018', '2018'), ('2017', '2017'), ('2016', '2016'), ('2015', '2015'), ('2014', '2014'), ('2013', '2013'), ('2012', '2012'), ('2011', '2011'), ('2010', '2010'), ('2009', '2009'), ('2008', '2008'), ('2007', '2007'), ('2006', '2006'), ('2005', '2005'), ('2004', '2004'), ('2003', '2003'), ('2002', '2002'), ('2001', '2001'), ('1999', '1999'), ('1998', '1998'), ('1997', '1997'), ('1996', '1996'), ('1995', '1995'), ('1994', '1994'), ('1993', '1993'), ('1992', '1992'), ('1991', '1991'), ('1990', '1990'), ('1989', '1989'), ('1988', '1988'), ('1987', '1987'), ('1986', '1986'), ('1985', '1985'), ('1984', '1984'), ('1983', '1983'), ('1982', '1982'), ('1981', '1981'), ('1980', '1980'), ('1979', '1979'), ('1978', '1978'), ('1977', '1977'), ('1976', '1976'), ('1975', '1975'), ('1974', '1974'), ('1973', '1973'), ('1972', '1972'), ('1971', '1971'), ('1970', '1970'), ('1969', '1969'), ('1968', '1968'), ('1967', '1967'), ('1966', '1966'), ('1965', '1965'), ('1964', '1964'), ('1963', '1963'), ('1962', '1962'), ('1961', '1961'), ('1960', '1960'), ('1959', '1959'), ('1958', '1958'), ('1957', '1957'), ('1956', '1956'), ('1955', '1955'), ('1954', '1954'), ('1953', '1953'), ('1952', '1952'), ('1951', '1951'), ('1950', '1950'), ('1949', '1949'), ('1948', '1948'), ('1947', '1947'), ('1946', '1946'), ('1946', '1945'), ('1944', '1944'), ('1943', '1943'), ('1942', '1942'), ('1941', '1941'), ('1940', '1940'), ('1939', '1939'), ('1938', '1938'), ('1937', '1937'), ('1936', '1936'), ('1935', '1935'), ('1934', '1934'), ('1933', '1933'), ('1932', '1932'), ('1931', '1931'), ('1930', '1930'), ('1929', '1929'), ('1928', '1928'), ('1927', '1927'), ('1926', '1926'), ('1925', '1925'), ('1924', '1924'), ('1923', '1923'), ('1922', '1922'), ('1921', '1921'), ('1920', '1920'), ('1919', '1919'), ('1918', '1918'), ('1917', '1917'), ('1916', '1916'), ('1915', '1915'), ('1914', '1914'), ('1913', '1913'), ('1912', '1912'), ('1911', '1911'), ('1910', '1910'), ('1909', '1909'), ('1908', '1908'), ('1907', '1907'), ('1906', '1906'), ('1905', '1905'), ('1904', '1904'), ('1903', '1903'), ('1902', '1902'), ('1901', '1901')], default='2019', max_length=4, verbose_name='year built')),
                ('gross_weight', models.PositiveIntegerField(blank=True, null=True)),
                ('image', models.ImageField(blank=True, height_field='height_field', null=True, upload_to=assets.models.upload_location, width_field='width_field')),
                ('height_field', models.IntegerField(default=0)),
                ('width_field', models.IntegerField(default=0)),
                ('content', models.TextField(verbose_name='description and condition')),
                ('used_for', models.CharField(max_length=120)),
                ('color', models.CharField(blank=True, max_length=120, null=True)),
                ('fuel', models.CharField(choices=[('G', 'gasoline'), ('D', 'diesel'), ('M', 'mix two cycle'), ('E', 'electric'), ('H', 'hybrid'), ('W', 'wind'), ('P', 'human powered')], max_length=1, verbose_name='type of fuel')),
            ],
            options={
                'ordering': ['user', 'brand', 'model', 'year'],
            },
        ),
        migrations.CreateModel(
            name='EquipmentManufacturer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=60, unique=True, verbose_name='brand')),
            ],
            options={
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='EquipmentModelType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=60, verbose_name='model')),
            ],
            options={
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='HeavyEquipmentManufacturer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=60, unique=True, verbose_name='make')),
            ],
            options={
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='HeavyEquipmentModelType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=60, verbose_name='model')),
            ],
            options={
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='MarineModelType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=60, verbose_name='model')),
            ],
            options={
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='MarineVessel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, help_text='name of the vessel', max_length=30, null=True)),
                ('slug', models.SlugField(blank=True, help_text='leave blank, or unique name', null=True, unique=True)),
                ('port_of_registry', models.CharField(blank=True, max_length=100, null=True)),
                ('reg_exp_date', models.DateField(blank=True, null=True)),
                ('vehicle_classification', models.CharField(choices=[('UPV', 'uninspected passenger vessels'), ('IPV', 'inspected passenger vessels'), ('PWC', 'personal water craft')], default='PV', max_length=3)),
                ('year', models.CharField(choices=[('2019', '2019'), ('2018', '2018'), ('2017', '2017'), ('2016', '2016'), ('2015', '2015'), ('2014', '2014'), ('2013', '2013'), ('2012', '2012'), ('2011', '2011'), ('2010', '2010'), ('2009', '2009'), ('2008', '2008'), ('2007', '2007'), ('2006', '2006'), ('2005', '2005'), ('2004', '2004'), ('2003', '2003'), ('2002', '2002'), ('2001', '2001'), ('1999', '1999'), ('1998', '1998'), ('1997', '1997'), ('1996', '1996'), ('1995', '1995'), ('1994', '1994'), ('1993', '1993'), ('1992', '1992'), ('1991', '1991'), ('1990', '1990'), ('1989', '1989'), ('1988', '1988'), ('1987', '1987'), ('1986', '1986'), ('1985', '1985'), ('1984', '1984'), ('1983', '1983'), ('1982', '1982'), ('1981', '1981'), ('1980', '1980'), ('1979', '1979'), ('1978', '1978'), ('1977', '1977'), ('1976', '1976'), ('1975', '1975'), ('1974', '1974'), ('1973', '1973'), ('1972', '1972'), ('1971', '1971'), ('1970', '1970'), ('1969', '1969'), ('1968', '1968'), ('1967', '1967'), ('1966', '1966'), ('1965', '1965'), ('1964', '1964'), ('1963', '1963'), ('1962', '1962'), ('1961', '1961'), ('1960', '1960'), ('1959', '1959'), ('1958', '1958'), ('1957', '1957'), ('1956', '1956'), ('1955', '1955'), ('1954', '1954'), ('1953', '1953'), ('1952', '1952'), ('1951', '1951'), ('1950', '1950'), ('1949', '1949'), ('1948', '1948'), ('1947', '1947'), ('1946', '1946'), ('1946', '1945'), ('1944', '1944'), ('1943', '1943'), ('1942', '1942'), ('1941', '1941'), ('1940', '1940'), ('1939', '1939'), ('1938', '1938'), ('1937', '1937'), ('1936', '1936'), ('1935', '1935'), ('1934', '1934'), ('1933', '1933'), ('1932', '1932'), ('1931', '1931'), ('1930', '1930'), ('1929', '1929'), ('1928', '1928'), ('1927', '1927'), ('1926', '1926'), ('1925', '1925'), ('1924', '1924'), ('1923', '1923'), ('1922', '1922'), ('1921', '1921'), ('1920', '1920'), ('1919', '1919'), ('1918', '1918'), ('1917', '1917'), ('1916', '1916'), ('1915', '1915'), ('1914', '1914'), ('1913', '1913'), ('1912', '1912'), ('1911', '1911'), ('1910', '1910'), ('1909', '1909'), ('1908', '1908'), ('1907', '1907'), ('1906', '1906'), ('1905', '1905'), ('1904', '1904'), ('1903', '1903'), ('1902', '1902'), ('1901', '1901')], default='2019', max_length=4, verbose_name='year built')),
                ('gross_weight', models.PositiveIntegerField(blank=True, null=True)),
                ('hull_number', models.CharField(max_length=17)),
                ('hull_type', models.CharField(choices=[('MV', 'mono hull deep V'), ('MF', 'mono hull flat bottom'), ('CD', 'catamaran double hull'), ('CT', 'catamaran triple hull')], default='MV', max_length=2)),
                ('hull_material', models.CharField(choices=[('F', 'fiberglass'), ('W', 'wood'), ('A', 'aluminum'), ('S', 'steel'), ('C', 'cement'), ('K', 'kevlar')], default='F', max_length=1)),
                ('image', models.ImageField(blank=True, height_field='height_field', null=True, upload_to=assets.models.marine_vessel, width_field='width_field')),
                ('height_field', models.IntegerField(default=0)),
                ('width_field', models.IntegerField(default=0)),
                ('content', models.TextField(verbose_name='description and condition')),
                ('used_for', models.CharField(max_length=100)),
                ('registered_owner', models.CharField(default='Owner', max_length=25)),
                ('owners_address', models.CharField(default='address', max_length=120)),
                ('is_it_insured', models.BooleanField(default=False)),
                ('insurance_type', models.CharField(default='marine', max_length=100)),
                ('insurance_cost', models.DecimalField(blank=True, decimal_places=2, default=159.26, max_digits=5)),
                ('insurance_policy_number', models.CharField(blank=True, max_length=6)),
                ('seatow', models.BooleanField(default=False)),
                ('assistance_miles', models.IntegerField(blank=True, default=20, null=True)),
                ('original_msrp', models.IntegerField(blank=True, default=36075, null=True)),
                ('price_paid', models.IntegerField(blank=True, default=400, help_text='in dollars', null=True)),
                ('reported_loa', models.PositiveIntegerField(blank=True, null=True)),
                ('reported_lwl', models.PositiveIntegerField(blank=True, null=True)),
                ('reported_beam', models.PositiveIntegerField(blank=True, null=True)),
                ('reported_draft', models.PositiveIntegerField(blank=True, null=True)),
                ('max_height', models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                'ordering': ['user', 'brand', 'model', 'year'],
            },
        ),
        migrations.CreateModel(
            name='MarineVesselManufacturer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=60, unique=True, verbose_name='brand')),
            ],
            options={
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='Parts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=35, verbose_name='part name')),
                ('part_number', models.CharField(max_length=17, unique=True)),
                ('image', models.ImageField(blank=True, height_field='height_field', null=True, upload_to=assets.models.parts_upload, width_field='width_field')),
                ('height_field', models.IntegerField(default=0)),
                ('width_field', models.IntegerField(default=0)),
                ('content', models.TextField(verbose_name='Part description')),
                ('used_for', models.CharField(max_length=200)),
                ('price', models.DecimalField(decimal_places=2, default=0.0, max_digits=6)),
                ('publish', models.DateTimeField(auto_now_add=True)),
                ('timestamp', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['title', 'part_number'],
            },
        ),
        migrations.CreateModel(
            name='ThroughHull',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='center engine strainer', max_length=100, verbose_name='through hole purpose')),
            ],
            options={
                'ordering': ['title', 'part'],
            },
        ),
        migrations.CreateModel(
            name='TypeOfAsset',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='name of asset')),
                ('slug', models.SlugField(blank=True, help_text='leave blank, or unique name', null=True, unique=True)),
                ('image', models.ImageField(blank=True, height_field='height_field', null=True, upload_to=assets.models.upload_location, width_field='width_field')),
                ('height_field', models.IntegerField(default=0)),
                ('width_field', models.IntegerField(default=0)),
                ('content', models.TextField(verbose_name='description and condition')),
                ('publish', models.DateField(auto_now=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('draft', models.BooleanField(default=False)),
                ('land_vehicle', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='assets.Automobile')),
            ],
            options={
                'ordering': ['user', '-publish'],
            },
        ),
    ]
